pipeline {
    agent {
        node {
            label 'maven'
            
        }
    }
environment {
    PATH = "/opt/apache-maven-3.9.4/bin:$PATH"
}
    stages {
        stage('Contineous-Build') {
            steps {
                echo "------------Build started-----------"
                sh 'mvn clean deploy -Dmaven.test.skip=true'
                echo "------------Build completed-----------"
            }
        }

        stage('Contineous-unit-Test') {
            steps {
                echo "------------unit test cases started-----------"
                sh 'mvn surefire-report:report'
                echo "------------unit test cases completed-----------"
            }
        }

	    stage('Contineous Test') {
        environment {
            scannerHome = tool 'demo-sonarqube-scanner'
             }
            steps {
                withSonarQubeEnv('demo-sonarqube-server') {
                // Run SonarScanner
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }
        stage("Quality Gate") {
            Steps {
                script {
                    timeout(time: 1, unit: 'HOURS') { // Just in case something goes wrong, pipeline will be killed after a timeout
                        def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }    
            }   
        }
    }
}
